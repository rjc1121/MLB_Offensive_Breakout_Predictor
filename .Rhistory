breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE)
slice(1:10)
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
View(Offense_2023)
#Loading Packages
library(tidyverse)
library(randomForest)
library(ggplot2)
library(readxl)
library(knitr)
#Importing Data
Offense_2023 <- Offense_2023 <- read_excel("Offense_2023.xlsx", skip = 1)
X2024_Stats <- X2024_Stats <- read_excel("2024_Stats.xlsx", skip = 1)
#Standardizing names
Offense_2023 <- Offense_2023 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
#Getting rid of # and *
X2024_Stats <- X2024_Stats %>% mutate(
Player = gsub("[*#]", "", Player),
Player = str_trim(Player)
)
#Importing Data
Offense_2023 <- Offense_2023 <- read_excel("Offense_2023.xlsx", skip = 1)
X2024_Stats <- X2024_Stats <- read_excel("2024_Stats.xlsx", skip = 1)
#Standardizing names
Offense_2023 <- Offense_2023 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
#Getting rid of # and *
X2024_Stats <- X2024_Stats %>% mutate(
Player = gsub("[*#]", "", Player),
Player = str_trim(Player)
)
# Select required data
OPS_2024 <- X2024_Stats %>% select(Player, Age, Team, `OPS+`)
Offense_2023_Clean <- Offense_2023 %>% select(Player, pa, xbadiff, xslgdiff, oz_swing_percent, whiff_percent, barrel_batted_rate)
#Merging
Prediction_Data <- full_join(Offense_2023_Clean, OPS_2024, by = "Player")
View(Prediction_Data)
#Filtering Data to between 100 and 300 PAs, Age >= 27
Prediction_Data_Filtered <- Prediction_Data %>% filter(Age <= 27, pa >= 100, pa <=300)
Prediction_Data_Filtered <- drop_na(Prediction_Data_Filtered)
View(Prediction_Data_Filtered)
#Building the Forest
set.seed(21)
rf_model_exp <- randomForest(data = Prediction_Data_Filtered, `OPS+` ~ xbadiff +xslgdiff, importance = TRUE, ntree = 500)
rf_model_rate <- randomForest(data = Prediction_Data_Filtered, `OPS+` ~ oz_swing_percent + whiff_percent + barell_batted_rate, importance = TRUE, ntree = 500)
#Building the Forest
set.seed(21)
rf_model_exp <- randomForest(data = Prediction_Data_Filtered, `OPS+` ~ xbadiff +xslgdiff, importance = TRUE, ntree = 500)
rf_model_rate <- randomForest(data = Prediction_Data_Filtered, `OPS+` ~ oz_swing_percent + whiff_percent + barrel_batted_rate, importance = TRUE, ntree = 500)
#Importing 2024 expected stats
Offense_2024 <-Offense_2024 <- read_excel("Offense_2024.xlsx", skip = 1)
Offense_2024 <- Offense_2024 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
Offense_2024_Clean <- Offense_2024 %>% select(Player, pa, xbadiff, xslgdiff, wobadiff)
#Importing 2024 expected stats
Offense_2024 <-Offense_2024 <- read_excel("Offense_2024.xlsx", skip = 1)
Offense_2024 <- Offense_2024 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
Offense_2024_Clean <- Offense_2024 %>% select(Player, pa, xbadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent)
Prediction_Data_2024 <- Prediction_Data <- full_join(Offense_2024_Clean, OPS_2024, by = "Player")
Prediction_Data_Filtered_2024 <- Prediction_Data_2024 %>% filter(Age <= 27, pa >= 100, pa <=300)
Prediction_Data_Filtered_2024 <- drop_na(Prediction_Data_Filtered_2024)
#Prepping for merging 2024 data
Prediction_Data_Filtered_2024$OPS_Plus_2025_Prediction <- predict(rf_model, newdata = Prediction_Data_Filtered_2024)
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
importance_df <- as.data.frame(importance(rf_model))
importance_df$Feature <- rownames(importance_df)
rownames(importance_df) <- NULL
kable(importance_df[, c("Feature", "%IncMSE")], digits = 2, caption = "Feature Importance (%IncMSE)")
#Prepping for merging 2024 data
Prediction_Data_Filtered_2024$OPS_Plus_2025_Prediction <- predict(rf_model_exp, newdata = Prediction_Data_Filtered_2024)
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
Prediction_Data_Filtered_2024$OPS_Plus_2025_Prediction_Rate <- predict(rf_model_rate, newdata = Prediction_Data_Filtered_2024)
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction_Rate))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction_Rate), y = OPS_Plus_2025_Prediction_Rate)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction_Rate))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction_Rate), y = OPS_Plus_2025_Prediction_Rate)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction_Rate))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction_Rate), y = OPS_Plus_2025_Prediction_Rate)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction_Rate, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction_Rate))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction_Rate), y = OPS_Plus_2025_Prediction_Rate)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction_Rate, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+, Rate Version",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+ Expected Stats Version",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_Plus_2025_Prediction))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS+, Expected Stats",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_Plus_2025_Prediction), y = OPS_Plus_2025_Prediction)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS+, Expected Stats",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_Plus_2025_Prediction_Rate), y = OPS_Plus_2025_Prediction_Rate)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_Plus_2025_Prediction_Rate, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS+, Rate",
x = "Player", y = "Predicted OPS+") +
theme_minimal()
importance_df <- as.data.frame(importance(rf_model_rate))
importance_df$Feature <- rownames(importance_df)
rownames(importance_df) <- NULL
kable(importance_df[, c("Feature", "%IncMSE")], digits = 2, caption = "Feature Importance (%IncMSE)")
View(X2024_Stats)
#Loading Packages
library(tidyverse)
library(randomForest)
library(ggplot2)
library(readxl)
library(knitr)
#Importing Data
Offense_2023 <- Offense_2023 <- read_excel("Offense_2023.xlsx", skip = 1)
X2024_Stats <- X2024_Stats <- read_excel("2024_Stats.xlsx", skip = 1)
#Standardizing names
Offense_2023 <- Offense_2023 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
#Getting rid of # and *
X2024_Stats <- X2024_Stats %>% mutate(
Player = gsub("[*#]", "", Player),
Player = str_trim(Player)
)
# Select required data
OPS_2024 <- X2024_Stats %>% select(Player, Age, Team, OPS)
Offense_2023_Clean <- Offense_2023 %>% select(Player, pa, xbadiff, xslgdiff, oz_swing_percent, whiff_percent, barrel_batted_rate)
#Merging
Prediction_Data <- full_join(Offense_2023_Clean, OPS_2024, by = "Player")
#Filtering Data to between 100 and 300 PAs, Age >= 27
Prediction_Data_Filtered <- Prediction_Data %>% filter(Age <= 27, pa >= 100, pa <=300)
Prediction_Data_Filtered <- drop_na(Prediction_Data_Filtered)
#Building the Forest
set.seed(21)
rf_model_exp <- randomForest(data = Prediction_Data_Filtered, OPS ~ xbadiff +xslgdiff, importance = TRUE, ntree = 500)
rf_model_rate <- randomForest(data = Prediction_Data_Filtered, OPS ~ oz_swing_percent + whiff_percent + barrel_batted_rate, importance = TRUE, ntree = 500)
#Importing 2024 expected stats
Offense_2024 <-Offense_2024 <- read_excel("Offense_2024.xlsx", skip = 1)
Offense_2024 <- Offense_2024 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
Offense_2024_Clean <- Offense_2024 %>% select(Player, pa, xbadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent)
Prediction_Data_2024 <- Prediction_Data <- full_join(Offense_2024_Clean, OPS_2024, by = "Player")
Prediction_Data_Filtered_2024 <- Prediction_Data_2024 %>% filter(Age <= 27, pa >= 100, pa <=300)
Prediction_Data_Filtered_2024 <- drop_na(Prediction_Data_Filtered_2024)
#Prepping for merging 2024 data
Prediction_Data_Filtered_2024$OPS_2025_Prediction_Exp <- predict(rf_model_exp, newdata = Prediction_Data_Filtered_2024)
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_2025_Prediction_Exp))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_2025_Prediction_Exp), y = OPS_2025_Prediction_Exp)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_2025_Prediction_Exp, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS, Expected",
x = "Player", y = "Predicted OPS") +
theme_minimal()
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_2025_Prediction_Exp))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_2025_Prediction_Exp), y = OPS_2025_Prediction_Exp)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_2025_Prediction_Exp, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS, Expected",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_2025_Prediction_Exp), y = OPS_2025_Prediction_Exp)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_2025_Prediction_Exp, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS, Expected",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_2025_Prediction_Exp), y = OPS_2025_Prediction_Exp)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_2025_Prediction_Exp, 1)), hjust = 3) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS, Expected",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_2025_Prediction_Exp), y = OPS_2025_Prediction_Exp)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_2025_Prediction_Exp, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS, Expected",
x = "Player", y = "Predicted OPS") +
theme_minimal()
importance_df <- as.data.frame(importance(rf_model_exp))
importance_df$Feature <- rownames(importance_df)
rownames(importance_df) <- NULL
kable(importance_df[, c("Feature", "%IncMSE")], digits = 2, caption = "Feature Importance (%IncMSE)")
Prediction_Data_Filtered_2024$OPS_2025_Prediction_Rate <- predict(rf_model_rate, newdata = Prediction_Data_Filtered_2024)
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_2025_Prediction_Rate))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_2025_Prediction_Rate), y = OPS_2025_Prediction_Rate)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_2025_Prediction_Rate, 1)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS, Rate",
x = "Player", y = "Predicted OPS") +
theme_minimal()
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_2025_Prediction_Rate))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_2025_Prediction_Rate), y = OPS_2025_Prediction_Rate)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_2025_Prediction_Rate, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS, Rate",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_2025_Prediction_Rate), y = OPS_2025_Prediction_Rate)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_2025_Prediction_Rate, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS, Rate",
x = "Player", y = "Predicted OPS") +
theme_minimal()
View(non_rookies_10)
View(non_rookies)
Prediction_Data_Filtered_2024$OPS_2025_Prediction_Rate <- predict(rf_model_rate, newdata = Prediction_Data_Filtered_2024)
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_2025_Prediction_Rate))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_2025_Prediction_Rate), y = OPS_2025_Prediction_Rate)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_2025_Prediction_Rate, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout Rookie Candidates by OPS, Rate",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_2025_Prediction_Rate), y = OPS_2025_Prediction_Rate)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_2025_Prediction_Rate, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS, Rate",
x = "Player", y = "Predicted OPS") +
theme_minimal()
View(non_rookies)
View(breakouts)
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_2025_Prediction_Rate), y = OPS_2025_Prediction_Rate)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_2025_Prediction_Rate, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Bounce Back Candidates by OPS, Rate",
x = "Player", y = "Predicted OPS") +
theme_minimal()
importance_df <- as.data.frame(importance(rf_model_rate))
importance_df$Feature <- rownames(importance_df)
rownames(importance_df) <- NULL
kable(importance_df[, c("Feature", "%IncMSE")], digits = 2, caption = "Feature Importance (%IncMSE)")
importance_df <- as.data.frame(importance(rf_model_exp))
importance_df$Feature <- rownames(importance_df)
rownames(importance_df) <- NULL
kable(importance_df[, c("Feature", "%IncMSE")], digits = 2, caption = "Feature Importance (%IncMSE)")
#Plotting
breakouts <-Prediction_Data_Filtered_2024 %>%
arrange(desc(OPS_2025_Prediction_Exp))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, OPS_2025_Prediction_Exp), y = OPS_2025_Prediction_Exp)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(OPS_2025_Prediction_Exp, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates (exp)",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, OPS_2025_Prediction_Exp), y = OPS_2025_Prediction_Exp)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(OPS_2025_Prediction_Exp, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates (exp)",
x = "Player", y = "Predicted OPS") +
theme_minimal()
importance_df <- as.data.frame(importance(rf_model_exp))
importance_df$Feature <- rownames(importance_df)
rownames(importance_df) <- NULL
kable(importance_df[, c("Feature", "%IncMSE")], digits = 2, caption = "Feature Importance (%IncMSE)")
