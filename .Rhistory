set.seed(21)
x_2023 <- model.matrix(on_base_plus_slg ~ xslgdiff + xbadiff + whiff_percent + barrel_batted_rate + oz_swing_percent, Prediction_Data_2023_Filtered)[, -1]
y_2024 <- Prediction_Data_2023_Filtered$on_base_plus_slg
cv_ridge <- cv.glmnet(x_2023, y_2024, alpha = 0, nfolds = 10)
best_lambda <- cv_ridge$lambda.min
#Filtering 2024
Prediction_Data_2024 <- Offense_2024 %>% select(Player, player_age, pa, xbadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent)
Prediction_Data_2024_Filtered <- Prediction_Data_2024 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2024_Filtered <- drop_na(Prediction_Data_2024_Filtered)
x_2024 <- model.matrix(~ xslgdiff + xbadiff + whiff_percent + barrel_batted_rate + oz_swing_percent, Prediction_Data_2024_Filtered)[, -1]
pred_2025 <- predict(cv_ridge, s = best_lambda, newx = x_2024)
Prediction_Data_2024_Filtered$Predicted_OPS_2025 <- as.vector(pred_2025)
#Plotting
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025), y = Predicted_OPS_2025)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025), y = Predicted_OPS_2025)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates (exp)",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025), y = Predicted_OPS_2025)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
pred_2024 <- predict(cv_ridge, s = best_lambda, newx = x_2023)
rmse <- sqrt(mean((pred_2024 - y_2024)^2))
r2 <- cor(pred_2024, y_2024)^2
mae <- mean(abs(pred_2024 - y_2024))
model_accuracy <- data.frame(
Metric = c("RMSE", "RÂ²", "MAE", "Lambda"),
Value = c(rmse, r2, mae, best_lambda)
)
model_accuracy
#Loading Packages
library(tidyverse)
library(randomForest)
library(ggplot2)
library(readxl)
library(knitr)
#Importing Data
Offense_2023 <- Offense_2023 <- read_excel("Offense_2023.xlsx", skip = 1)
Offense_2024 <-  read_excel("Offense_2024.xlsx", skip = 1)
#Standardizing names
Offense_2023 <- Offense_2023 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
Offense_2024 <- Offense_2024 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
# Select required data
OPS_2024 <- Offense_2024 %>% select(Player, player_age, on_base_plus_slg)
Offense_2023_Clean <- Offense_2023 %>% select(Player, pa, xbadiff, xslgdiff, oz_swing_percent, whiff_percent, barrel_batted_rate)
#Merging
Prediction_Data_2023 <- full_join(Offense_2023_Clean, OPS_2024, by = "Player")
#Filtering Data to between 100 and 300 PAs, Age >= 27
Prediction_Data_2023_Filtered <- Prediction_Data_2023 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2023_Filtered <- drop_na(Prediction_Data_2023_Filtered)
#Building the Forest
set.seed(21)
features <- c("xslgdiff", "xbadiff", "whiff_percent", "barell_batted_rate", "oz_swing_percent")
x_train <- Prediction_Data_2023_Filtered[, features]
#Building the Forest
set.seed(21)
features <- c("xslgdiff", "xbadiff", "whiff_percent", "barell_batted_rate", "oz_swing_percent")
x_train <- Prediction_Data_2023_Filtered[, features]
#Building the Forest
set.seed(21)
features <- c("xslgdiff", "xbadiff", "whiff_percent", "barrel_batted_rate", "oz_swing_percent")
x_train <- Prediction_Data_2023_Filtered[, features]
y_train <- Prediction_Data_2023_Filtered$on_base_plus_slg
#Filtering 2024
Prediction_Data_2024 <- Offense_2024 %>% select(Player, player_age, pa, xbadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent)
Prediction_Data_2024_Filtered <- Prediction_Data_2024 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2024_Filtered <- drop_na(Prediction_Data_2024_Filtered)
rf_model <- randomForest(x = x_train, y = y_train, ntree = 500, importance = TRUE)
#Filtering 2024
Prediction_Data_2024 <- Offense_2024 %>% select(Player, player_age, pa, xbadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent)
Prediction_Data_2024_Filtered <- Prediction_Data_2024 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2024_Filtered <- drop_na(Prediction_Data_2024_Filtered)
#Filtering 2024
Prediction_Data_2024 <- Offense_2024 %>% select(Player, player_age, pa, xbadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent)
Prediction_Data_2024_Filtered <- Prediction_Data_2024 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2024_Filtered <- drop_na(Prediction_Data_2024_Filtered)
x_test <- Prediction_Data_2024_Filtered[, features]
pred_2025 <- predict(rf_model, newdata = x_test)
x_test <- Prediction_Data_2024_Filtered[, features]
pred_2025 <- predict(rf_model, newdata = x_test)
Prediction_Data_2024_Filtered$Predicted_OPS_2025 <- pred_2025
View(Prediction_Data_2024_Filtered)
#Plotting
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025), y = Predicted_OPS_2025)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025), y = Predicted_OPS_2025)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
importance(rf_model)
varImpPlot(rf_model)
kable(importance(rf_model))
kable(importance(rf_model))
varImpPlot(rf_model)
#Building the Model
set.seed(21)
x_2023 <- model.matrix(on_base_plus_slg ~ xslgdiff + xbadiff + whiff_percent + barrel_batted_rate + oz_swing_percent, Prediction_Data_2023_Filtered)[, -1]
y_2024 <- Prediction_Data_2023_Filtered$on_base_plus_slg
cv_ridge <- cv.glmnet(x_2023, y_2024, alpha = 0, nfolds = 10)
best_lambda <- cv_ridge$lambda.min
#Predicting 2025 OPS with Ridge
x_2024 <- model.matrix(~ xslgdiff + xbadiff + whiff_percent + barrel_batted_rate + oz_swing_percent, Prediction_Data_2024_Filtered)[, -1]
pred_2025 <- predict(cv_ridge, s = best_lambda, newx = x_2024)
Prediction_Data_2024_Filtered$Predicted_OPS_2025_Ridge <- as.vector(pred_2025)
x_test <- Prediction_Data_2024_Filtered[, features]
pred_2025 <- predict(rf_model, newdata = x_test)
Prediction_Data_2024_Filtered$Predicted_OPS_2025_RF <- pred_2025
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_Ridge))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates Ridge",
x = "Player", y = "Predicted OPS") +
theme_minimal()
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_Ridge))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates Ridge",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
#Loading Packages
library(tidyverse)
library(randomForest)
library(glmnet)
library(ggplot2)
library(readxl)
library(knitr)
#Importing Data
Offense_2023 <- Offense_2023 <- read_excel("Offense_2023.xlsx", skip = 1)
Offense_2024 <-  read_excel("Offense_2024.xlsx", skip = 1)
#Standardizing names
Offense_2023 <- Offense_2023 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
Offense_2024 <- Offense_2024 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
# Select required data
OPS_2024 <- Offense_2024 %>% select(Player, player_age, on_base_plus_slg)
Offense_2023_Clean <- Offense_2023 %>% select(Player, pa, xbadiff, xslgdiff, oz_swing_percent, whiff_percent, barrel_batted_rate)
#Merging
Prediction_Data_2023 <- full_join(Offense_2023_Clean, OPS_2024, by = "Player")
#Filtering Data to between 100 and 300 PAs, Age >= 27
Prediction_Data_2023_Filtered <- Prediction_Data_2023 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2023_Filtered <- drop_na(Prediction_Data_2023_Filtered)
#Building the Forest
set.seed(21)
features <- c("xslgdiff", "xbadiff", "whiff_percent", "barrel_batted_rate", "oz_swing_percent")
x_train <- Prediction_Data_2023_Filtered[, features]
y_train <- Prediction_Data_2023_Filtered$on_base_plus_slg
rf_model <- randomForest(x = x_train, y = y_train, ntree = 500, importance = TRUE)
#Filtering 2024
Prediction_Data_2024 <- Offense_2024 %>% select(Player, player_age, pa, xbadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent)
Prediction_Data_2024_Filtered <- Prediction_Data_2024 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2024_Filtered <- drop_na(Prediction_Data_2024_Filtered)
x_test <- Prediction_Data_2024_Filtered[, features]
pred_2025 <- predict(rf_model, newdata = x_test)
Prediction_Data_2024_Filtered$Predicted_OPS_2025_RF <- pred_2025
#Plotting
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_RF))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
kable(importance(rf_model))
varImpPlot(rf_model)
#Building the Model
set.seed(21)
x_2023 <- model.matrix(on_base_plus_slg ~ xslgdiff + xbadiff + whiff_percent + barrel_batted_rate + oz_swing_percent, Prediction_Data_2023_Filtered)[, -1]
y_2024 <- Prediction_Data_2023_Filtered$on_base_plus_slg
cv_ridge <- cv.glmnet(x_2023, y_2024, alpha = 0, nfolds = 10)
best_lambda <- cv_ridge$lambda.min
#Predicting 2025 OPS with Ridge
x_2024 <- model.matrix(~ xslgdiff + xbadiff + whiff_percent + barrel_batted_rate + oz_swing_percent, Prediction_Data_2024_Filtered)[, -1]
pred_2025 <- predict(cv_ridge, s = best_lambda, newx = x_2024)
Prediction_Data_2024_Filtered$Predicted_OPS_2025_Ridge <- as.vector(pred_2025)
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_Ridge))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates Ridge",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
#Loading Packages
library(tidyverse)
library(randomForest)
library(glmnet)
library(ggplot2)
library(readxl)
library(knitr)
#Importing Data
Offense_2023 <- Offense_2023 <- read_excel("Offense_2023.xlsx", skip = 1)
Offense_2024 <-  read_excel("Offense_2024.xlsx", skip = 1)
#Standardizing names
Offense_2023 <- Offense_2023 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
Offense_2024 <- Offense_2024 %>%
separate(`last_name, first_name`, into = c("Last", "First"), sep = ", ") %>%
mutate(Player = paste(First, Last)) %>%
select(-First, -Last)
# Select required data
OPS_2024 <- Offense_2024 %>% select(Player, player_age, on_base_plus_slg)
Offense_2023_Clean <- Offense_2023 %>% select(Player, pa, xbadiff, xslgdiff, oz_swing_percent, whiff_percent, barrel_batted_rate)
View(Offense_2023)
# Select required data
OPS_2024 <- Offense_2024 %>% select(Player, player_age, on_base_plus_slg)
Offense_2023_Clean <- Offense_2023 %>% select(Player, pa, wobadiff, xslgdiff, oz_swing_percent, whiff_percent, barrel_batted_rate, pull_percent)
#Merging
Prediction_Data_2023 <- full_join(Offense_2023_Clean, OPS_2024, by = "Player")
#Filtering Data to between 100 and 300 PAs, Age >= 27
Prediction_Data_2023_Filtered <- Prediction_Data_2023 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2023_Filtered <- drop_na(Prediction_Data_2023_Filtered)
#Building the Forest
set.seed(21)
features <- c("xslgdiff", "wobadiff", "whiff_percent", "barrel_batted_rate", "oz_swing_percent", "pull_percent")
x_train <- Prediction_Data_2023_Filtered[, features]
y_train <- Prediction_Data_2023_Filtered$on_base_plus_slg
rf_model <- randomForest(x = x_train, y = y_train, ntree = 500, importance = TRUE)
#Filtering 2024
Prediction_Data_2024 <- Offense_2024 %>% select(Player, player_age, pa, wobadiff, xslgdiff, oz_swing_percent, barrel_batted_rate, whiff_percent, pull_percent)
Prediction_Data_2024_Filtered <- Prediction_Data_2024 %>% filter(player_age <= 27, pa >= 100, pa <=300)
Prediction_Data_2024_Filtered <- drop_na(Prediction_Data_2024_Filtered)
x_test <- Prediction_Data_2024_Filtered[, features]
pred_2025 <- predict(rf_model, newdata = x_test)
Prediction_Data_2024_Filtered$Predicted_OPS_2025_RF <- pred_2025
#Plotting
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_RF))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
#Plotting
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_RF))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:15)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:15)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
kable(importance(rf_model))
varImpPlot(rf_model)
#Building the Model
set.seed(21)
x_2023 <- model.matrix(on_base_plus_slg ~ xslgdiff + wobadiff + whiff_percent + barrel_batted_rate + oz_swing_percent + pull_percent, Prediction_Data_2023_Filtered)[, -1]
y_2024 <- Prediction_Data_2023_Filtered$on_base_plus_slg
cv_ridge <- cv.glmnet(x_2023, y_2024, alpha = 0, nfolds = 10)
best_lambda <- cv_ridge$lambda.min
#Predicting 2025 OPS with Ridge
x_2024 <- model.matrix(~ xslgdiff + wobadiff + whiff_percent + barrel_batted_rate + oz_swing_percent + pull_percent, Prediction_Data_2024_Filtered)[, -1]
pred_2025 <- predict(cv_ridge, s = best_lambda, newx = x_2024)
Prediction_Data_2024_Filtered$Predicted_OPS_2025_Ridge <- as.vector(pred_2025)
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_Ridge))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:10)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates Ridge",
x = "Player", y = "Predicted OPS") +
theme_minimal()
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_Ridge))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:12)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted Breakout 2025 Rookie Candidates Ridge",
x = "Player", y = "Predicted OPS") +
theme_minimal()
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:15)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 10 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
pred_2024 <- predict(cv_ridge, s = best_lambda, newx = x_2023)
# RMSE
rmse <- sqrt(mean((pred_2024 - y_2024)^2))
# RÂ²
r2 <- cor(pred_2024, y_2024)^2
# MAE
mae <- mean(abs(pred_2024 - y_2024))
#Making a table
model_accuracy <- data.frame(
Metric = c("RMSE", "RÂ²", "MAE", "Lambda"),
Value = c(rmse, r2, mae, best_lambda)
)
kable(model_accuracy)
non_rookies <- breakouts %>%
filter(!Player %in% Rookies_2024$Name)
non_rookies_10 <- non_rookies %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:15)
ggplot(non_rookies_10, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "purple") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 15 Predicted 2025 Bounce Back Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
#Plotting
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_RF))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:15)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_RF), y = Predicted_OPS_2025_RF)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_RF, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 15 Predicted Breakout 2025 Rookie Candidates",
x = "Player", y = "Predicted OPS") +
theme_minimal()
breakouts <-Prediction_Data_2024_Filtered %>%
arrange(desc(Predicted_OPS_2025_Ridge))
Rookies_2024 <- read_excel("Rookies_2024.xlsx", skip = 1)
rookie_breakouts <- breakouts %>%
filter(Player %in% Rookies_2024$Name) %>%
distinct(Player, .keep_all = TRUE) %>%
slice(1:15)
ggplot(rookie_breakouts, aes(x = reorder(Player, Predicted_OPS_2025_Ridge), y = Predicted_OPS_2025_Ridge)) +
geom_col(fill = "royalblue") +
geom_text(aes(label = round(Predicted_OPS_2025_Ridge, 3)), hjust = 1) +
coord_flip() +
labs(title = "Top 15 Predicted Breakout 2025 Rookie Candidates Ridge",
x = "Player", y = "Predicted OPS") +
theme_minimal()
